{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjamindesole/Documents/GitHub/Memory/src/App.js\";\nimport React, { Component } from 'react';\nimport shuffle from 'lodash.shuffle';\nimport './App.css';\nimport Card from './Card';\nimport GuessCount from './GuessCount';\nimport HallOfFame, { FAKE_HOF } from './HallOfFame';\nconst SIDE = 6;\nconst SYMBOLS = 'üòÄüéâüíñüé©üê∂üê±ü¶Ñüê¨üåçüåõüåûüí´üçéüçåüçìüçêüçüüçø';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: this.generateCards(),\n      currentPair: [],\n      guesses: 0,\n      matchedCardIndices: []\n    };\n\n    this.handleCardClick = card => {\n      console.log(card, 'clicked', this);\n    };\n  }\n\n  generateCards() {\n    const result = [];\n    const size = SIDE * SIDE;\n    const candidates = shuffle(SYMBOLS);\n\n    while (result.length < size) {\n      const card = candidates.pop();\n      result.push(card, card);\n    }\n\n    return shuffle(result);\n  }\n  /**\n   * Arrow fx for binding\n   * @param {string} card \n   */\n\n\n  render() {\n    const {\n      cards,\n      guesses,\n      matchedCardIndices\n    } = this.state;\n    const won = matchedCardIndices.l;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory\",\n      children: [/*#__PURE__*/_jsxDEV(GuessCount, {\n        guesses: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), this.cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        feedback: \"visible\",\n        onClick: this.handleCardClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)), won && /*#__PURE__*/_jsxDEV(HallOfFame, {\n        entries: FAKE_HOF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/benjamindesole/Documents/GitHub/Memory/src/App.js"],"names":["React","Component","shuffle","Card","GuessCount","HallOfFame","FAKE_HOF","SIDE","SYMBOLS","App","state","cards","generateCards","currentPair","guesses","matchedCardIndices","handleCardClick","card","console","log","result","size","candidates","length","pop","push","render","won","l","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,cAArC;AAEA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,OAAO,GAAG,sCAAhB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,KAAKC,aAAL,EADD;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,OAAO,EAAE,CAHH;AAINC,MAAAA,kBAAkB,EAAG;AAJf,KADkB;;AAAA,SAuB1BC,eAvB0B,GAuBRC,IAAI,IAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,SAAlB,EAA6B,IAA7B;AACD,KAzByB;AAAA;;AAQ1BL,EAAAA,aAAa,GAAG;AACd,UAAMQ,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAGd,IAAI,GAAGA,IAApB;AACA,UAAMe,UAAU,GAAGpB,OAAO,CAACM,OAAD,CAA1B;;AACA,WAAOY,MAAM,CAACG,MAAP,GAAgBF,IAAvB,EAA6B;AAC3B,YAAMJ,IAAI,GAAGK,UAAU,CAACE,GAAX,EAAb;AACAJ,MAAAA,MAAM,CAACK,IAAP,CAAYR,IAAZ,EAAkBA,IAAlB;AACD;;AACD,WAAOf,OAAO,CAACkB,MAAD,CAAd;AACD;AAED;AACF;AACA;AACA;;;AAKEM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,KAAF;AAASG,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAAwC,KAAKL,KAAnD;AACA,UAAMiB,GAAG,GAAGZ,kBAAkB,CAACa,CAA/B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKjB,KAAL,CAAWkB,GAAX,CAAe,CAACZ,IAAD,EAAOa,KAAP,kBACd,QAAC,IAAD;AACA,QAAA,IAAI,EAAEb,IADN;AAEA,QAAA,QAAQ,EAAC,SAFT;AAIA,QAAA,OAAO,EAAE,KAAKD;AAJd,SAGKc,KAHL;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,EAUGH,GAAG,iBAAI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAErB;AAArB;AAAA;AAAA;AAAA;AAAA,cAVV;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA5CyB;;AA+C5B,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport shuffle from 'lodash.shuffle'\n\nimport './App.css'\n\nimport Card from './Card'\nimport GuessCount from './GuessCount'\nimport HallOfFame, { FAKE_HOF } from './HallOfFame'\n\nconst SIDE = 6\nconst SYMBOLS = 'üòÄüéâüíñüé©üê∂üê±ü¶Ñüê¨üåçüåõüåûüí´üçéüçåüçìüçêüçüüçø'\n\nclass App extends Component {\n  state = {\n    cards: this.generateCards(),\n    currentPair: [],\n    guesses: 0,\n    matchedCardIndices : [],\n  }\n\n  generateCards() {\n    const result = []\n    const size = SIDE * SIDE\n    const candidates = shuffle(SYMBOLS)\n    while (result.length < size) {\n      const card = candidates.pop()\n      result.push(card, card)\n    }\n    return shuffle(result)\n  }\n\n  /**\n   * Arrow fx for binding\n   * @param {string} card \n   */\n  handleCardClick = card => {\n    console.log(card, 'clicked', this)\n  }\n\n  render() {\n    const { cards, guesses, matchedCardIndices} = this.state\n    const won = matchedCardIndices.l\n    return (\n      <div className=\"memory\">\n        <GuessCount guesses={0} />\n        {this.cards.map((card, index) => (\n          <Card\n          card={card}\n          feedback=\"visible\"\n          key={index}\n          onClick={this.handleCardClick}\n          />\n        ))}\n        {won && <HallOfFame entries={FAKE_HOF}/>}\n      </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}