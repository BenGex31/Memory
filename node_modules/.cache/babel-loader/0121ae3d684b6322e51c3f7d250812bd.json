{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjamindesole/Documents/GitHub/Memory/src/App.js\";\nimport React, { Component } from 'react';\nimport shuffle from 'lodash.shuffle';\nimport './App.css';\nimport Card from './Card';\nimport GuessCount from './GuessCount';\nimport HallOfFame, { FAKE_HOF } from './HallOfFame';\nconst SIDE = 6;\nconst SYMBOLS = 'üòÄüéâüíñüé©üê∂üê±ü¶Ñüê¨üåçüåõüåûüí´üçéüçåüçìüçêüçüüçø';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.cards = this.generateCards();\n\n    this.handleCardClick = card => {\n      console.log(card, 'clicked', this);\n    };\n  }\n\n  generateCards() {\n    const result = [];\n    const size = SIDE * SIDE;\n    const candidates = shuffle(SYMBOLS);\n\n    while (result.length < size) {\n      const card = candidates.pop();\n      result.push(card, card);\n    }\n\n    return shuffle(result);\n  }\n  /**\n   * Arrow fx for bi\n   * @param {*} card \n   */\n\n\n  render() {\n    const won = new Date().getSeconds() % 2 === 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory\",\n      children: [/*#__PURE__*/_jsxDEV(GuessCount, {\n        guesses: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), this.cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        feedback: \"visible\",\n        onClick: this.handleCardClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)), won && /*#__PURE__*/_jsxDEV(HallOfFame, {\n        entries: FAKE_HOF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/benjamindesole/Documents/GitHub/Memory/src/App.js"],"names":["React","Component","shuffle","Card","GuessCount","HallOfFame","FAKE_HOF","SIDE","SYMBOLS","App","cards","generateCards","handleCardClick","card","console","log","result","size","candidates","length","pop","push","render","won","Date","getSeconds","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,cAArC;AAEA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,OAAO,GAAG,sCAAhB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB,KAAKC,aAAL,EADkB;;AAAA,SAkB1BC,eAlB0B,GAkBRC,IAAI,IAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,SAAlB,EAA6B,IAA7B;AACD,KApByB;AAAA;;AAG1BF,EAAAA,aAAa,GAAG;AACd,UAAMK,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAGV,IAAI,GAAGA,IAApB;AACA,UAAMW,UAAU,GAAGhB,OAAO,CAACM,OAAD,CAA1B;;AACA,WAAOQ,MAAM,CAACG,MAAP,GAAgBF,IAAvB,EAA6B;AAC3B,YAAMJ,IAAI,GAAGK,UAAU,CAACE,GAAX,EAAb;AACAJ,MAAAA,MAAM,CAACK,IAAP,CAAYR,IAAZ,EAAkBA,IAAlB;AACD;;AACD,WAAOX,OAAO,CAACc,MAAD,CAAd;AACD;AAED;AACF;AACA;AACA;;;AAKEM,EAAAA,MAAM,GAAG;AACP,UAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,UAAX,KAA0B,CAA1B,KAAgC,CAA5C;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKf,KAAL,CAAWgB,GAAX,CAAe,CAACb,IAAD,EAAOc,KAAP,kBACd,QAAC,IAAD;AACA,QAAA,IAAI,EAAEd,IADN;AAEA,QAAA,QAAQ,EAAC,SAFT;AAIA,QAAA,OAAO,EAAE,KAAKD;AAJd,SAGKe,KAHL;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,EAUGJ,GAAG,iBAAI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEjB;AAArB;AAAA;AAAA;AAAA;AAAA,cAVV;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAtCyB;;AAyC5B,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport shuffle from 'lodash.shuffle'\n\nimport './App.css'\n\nimport Card from './Card'\nimport GuessCount from './GuessCount'\nimport HallOfFame, { FAKE_HOF } from './HallOfFame'\n\nconst SIDE = 6\nconst SYMBOLS = 'üòÄüéâüíñüé©üê∂üê±ü¶Ñüê¨üåçüåõüåûüí´üçéüçåüçìüçêüçüüçø'\n\nclass App extends Component {\n  cards = this.generateCards()\n\n  generateCards() {\n    const result = []\n    const size = SIDE * SIDE\n    const candidates = shuffle(SYMBOLS)\n    while (result.length < size) {\n      const card = candidates.pop()\n      result.push(card, card)\n    }\n    return shuffle(result)\n  }\n\n  /**\n   * Arrow fx for bi\n   * @param {*} card \n   */\n  handleCardClick = card => {\n    console.log(card, 'clicked', this)\n  }\n\n  render() {\n    const won = new Date().getSeconds() % 2 === 0\n    return (\n      <div className=\"memory\">\n        <GuessCount guesses={0} />\n        {this.cards.map((card, index) => (\n          <Card\n          card={card}\n          feedback=\"visible\"\n          key={index}\n          onClick={this.handleCardClick}\n          />\n        ))}\n        {won && <HallOfFame entries={FAKE_HOF}/>}\n      </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}