{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjamindesole/Documents/GitHub/Memory/src/HallOfFame.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport './HallOfFame.css';\n\nconst HallOfFame = ({\n  entries\n}) => /*#__PURE__*/_jsxDEV(\"table\", {\n  className: \"hallOfFame\",\n  children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: entries.map(({\n      date,\n      guesses,\n      id,\n      player\n    }) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"date\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"guesses\",\n        children: guesses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"player\",\n        children: player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = HallOfFame;\nHallOfFame.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    guesses: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    player: PropTypes.string.isRequired\n  })).isRequired\n};\nexport default HallOfFame; // == Internal helpers ==============================================\n\nexport const FAKE_HOF = [{\n  id: 3,\n  guesses: 18,\n  date: '10/10/2017',\n  player: 'Jane'\n}, {\n  id: 2,\n  guesses: 23,\n  date: '11/10/2017',\n  player: 'Kevin'\n}, {\n  id: 1,\n  guesses: 31,\n  date: '06/10/2017',\n  player: 'Louisa'\n}, {\n  id: 0,\n  guesses: 48,\n  date: '14/10/2017',\n  player: 'Marc'\n}];\nconst HOF_KEY = '::Memory::HallofFame';\nconst HOF_MAX_SIZE = 10;\nexport function saveHOFEntry(entry, onStored) {\n  entry.date = new Date().toLocaleDateString();\n  entry.id = Date.now();\n  const entries = JSON.parse(localStorage.getItem(HOF_KEY) || '[]');\n  const insertionPoint = entries.findIndex(({\n    guesses\n  }) => guesses >= entry.guesses);\n\n  if (insertionPoint === -1) {\n    entries.push(entry);\n  } else {\n    entries.splice(insertionPoint, 0, entry);\n  }\n\n  if (entries.length > HOF_MAX_SIZE) {\n    entries.splice(HOF_MAX_SIZE, entries.length);\n  }\n\n  localStorage.setItem(HOF_KEY, JSON.stringify(entries));\n  onStored(entries);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"HallOfFame\");","map":{"version":3,"sources":["/Users/benjamindesole/Documents/GitHub/Memory/src/HallOfFame.js"],"names":["PropTypes","React","HallOfFame","entries","map","date","guesses","id","player","propTypes","arrayOf","shape","string","isRequired","number","FAKE_HOF","HOF_KEY","HOF_MAX_SIZE","saveHOFEntry","entry","onStored","Date","toLocaleDateString","now","JSON","parse","localStorage","getItem","insertionPoint","findIndex","push","splice","length","setItem","stringify"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport './HallOfFame.css'\n\nconst HallOfFame = ({ entries }) => (\n  <table className=\"hallOfFame\">\n    <tbody>\n      {entries.map(({ date, guesses, id, player }) => (\n        <tr key={id}>\n          <td className=\"date\">{date}</td>\n          <td className=\"guesses\">{guesses}</td>\n          <td className=\"player\">{player}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n)\n\nHallOfFame.propTypes = {\n  entries: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string.isRequired,\n      guesses: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      player: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n}\n\nexport default HallOfFame\n\n// == Internal helpers ==============================================\n\nexport const FAKE_HOF = [\n  { id: 3, guesses: 18, date: '10/10/2017', player: 'Jane' },\n  { id: 2, guesses: 23, date: '11/10/2017', player: 'Kevin' },\n  { id: 1, guesses: 31, date: '06/10/2017', player: 'Louisa' },\n  { id: 0, guesses: 48, date: '14/10/2017', player: 'Marc' },\n]\n\nconst HOF_KEY = '::Memory::HallofFame'\nconst HOF_MAX_SIZE = 10\n\nexport function saveHOFEntry(entry, onStored) {\n  entry.date = new Date().toLocaleDateString()\n  entry.id = Date.now()\n\n  const entries = JSON.parse(localStorage.getItem(HOF_KEY) || '[]')\n  const insertionPoint = entries.findIndex(\n    ({ guesses }) => guesses >= entry.guesses\n  )\n\n  if (insertionPoint === -1) {\n    entries.push(entry)\n  } else {\n    entries.splice(insertionPoint, 0, entry)\n  }\n  if (entries.length > HOF_MAX_SIZE) {\n    entries.splice(HOF_MAX_SIZE, entries.length)\n  }\n\n  localStorage.setItem(HOF_KEY, JSON.stringify(entries))\n  onStored(entries)\n}"]},"metadata":{},"sourceType":"module"}